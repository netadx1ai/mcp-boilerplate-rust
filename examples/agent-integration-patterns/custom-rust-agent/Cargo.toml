[package]
name = "custom-rust-agent"
version = "0.1.0"
edition = "2021"
description = "Custom Rust agent integration example with MCP servers"
authors = ["MCP Boilerplate Team"]
license = "MIT"

[[bin]]
name = "rust-agent"
path = "src/main.rs"

[[bin]]
name = "agent-benchmark"
path = "src/benchmark.rs"

[dependencies]
# Core async runtime
tokio = { workspace = true, features = ["full"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }

# HTTP client for MCP server communication
reqwest = { version = "0.11", features = ["json", "stream"] }

# AI/LLM integration
async-openai = "0.17"

# Logging and tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["json", "env-filter"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# UUID generation
uuid = { version = "1.0", features = ["v4", "serde"] }

# Configuration management
config = "0.14"

# Async utilities
futures = "0.3"
async-trait = "0.1"

# Error handling and retry logic
backoff = "0.4"

# Metrics and monitoring
metrics = "0.22"
metrics-exporter-prometheus = { version = "0.13", optional = true }

# CLI argument parsing
clap = { version = "4.0", features = ["derive"] }

# Template engine for responses
handlebars = "4.5"

# JSON Path for data extraction
jsonpath_lib = "0.3"

# State management
dashmap = "5.5"

[dev-dependencies]
tokio-test = "0.4"
wiremock = "0.5"
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.8"

[features]
default = ["tracing"]
monitoring = ["metrics-exporter-prometheus"]
benchmark = ["criterion"]

[[bench]]
name = "agent_performance"
harness = false
required-features = ["benchmark"]